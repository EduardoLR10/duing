
{
    
    
    
    
    
    
    
    
        
        
        
    
        
        
        
    
        
        
        
    
        
        
        
    
        
        
        
    
    "articles": [{"date":"2023-08-21","image":"","imageAlt":"","link":"https://duing.dev/posts/ooptypeclasses/","summary":"The main benefit of exploring different programming paradigms is to learn how to build bridges. You have your preferences and by playing with the competitors, you are able to see where your preferences fall apart and vice-versa. Eventually, the mastery of both sides will allow you to syntatically and semantically connect the same concepts across different worlds of programming.\nThe story goes as follows: suppose you have a function that is generic enough in order to be worth it to generalize it to other types of structures, given that some constraints on it will be guaranteed.","tags":["technical"],"title":"OOP-style Typeclasses"},{"date":"2023-07-17","image":"","imageAlt":"","link":"https://duing.dev/posts/runtime/","summary":"Recently, I experimented with SYB (Scrap Your Boilerplate) in the Haskell programming language for a master\u0026rsquo;s course. The plan was for me to make a toy example of one of the professor\u0026rsquo;s ideas using this library because of its power and generality.\nPrior to this project, I presented the subject for the class based on the original paper published by Simon and Ralf [1]. My impression after the reading, which is also the one that I attempted to portray to my peers, is that the usefulness of the method came at the cost of complexity of understanding and the use of unsafe operations.","tags":["lesson","technical"],"title":"Don't be a Hero, join a League"},{"date":"2023-07-09","image":"","imageAlt":"","link":"https://duing.dev/posts/beyondhackers/","summary":"The Cathedral and the Bazaar by Eric S. Raymond is a perfect union of philosophy, economics, and software development culture. The reverberations of his theory are fascinating and explain much more than just why you should care about open-source software.\nNeedless to say that I highly recommend the reading, there are aspects that he identified within the Hacker Culture that explain more than meets the naked eye. I\u0026rsquo;m here to suggest a few possible explanations for such observations and how the connection between those aspects and a hacker is more than just making money via coding.","tags":["lesson","recommendation"],"title":"Beyond Hackers"},{"date":"2023-03-06","image":"","imageAlt":"","link":"https://duing.dev/posts/masters/","summary":"Starting in March, I will start a master\u0026rsquo;s program at University of Bras√≠lia, the same university where I graduated almost a year ago. The thought process that I went in order to make such a decision is not conventional and I think it is worth sharing it.\nSoftware Industry As we know, the software industry values academic achievements only in very specific situations, usually involving big companies with very complicated projects to push, such as the next Apple M3 processor and Windows 12 at Microsoft.","tags":["lesson"],"title":"Why Masters?"},{"date":"2023-01-18","image":"","imageAlt":"","link":"https://duing.dev/posts/careaboutart/","summary":"In this post, I want to talk about how a movie that I watched years ago added some value in the current version of myself. How, now that I\u0026rsquo;m much older than back then, I see that the movie showed to me that art is much more important that I thought. How, even in my profession, there can be a noble purpose.\nRetrospective Sometimes we remember our infancy. We remember the toys we used to play with, the people we used to interact with, the lessons that we learned along the way (usually in the most painful way), and also we remember what we used to watch.","tags":["entertainment","lesson"],"title":"Do we still care about Art?"}],
    "test": "Publications   About   Threads of Abstraction   The Generalist is the greatest Specialist   Do or Case of; there is no Try   Don't make all defaults Dogmas   Circumstantial Leadership   Let us all be Pragmatists   Is it all about the Story?   Teaching is Fun   OOP-style Typeclasses   Don't be a Hero, join a League   Beyond Hackers   Why Masters?   Do we still care about Art?   My best idea of 2022   Fixing Recursion   Circular Programming or Corecursion   ",
    "page": "3",
    "next": 
        "https://duing.dev/page/4/index.json"
    
}

