
{
    
    
    
    
    
    
    
    
        
        
        
    
        
        
        
    
        
        
        
    
        
        
        
    
        
        
        
    
    "articles": [{"date":"2024-02-17","image":"","imageAlt":"","link":"https://duing.dev/publications/","summary":"J. C. Amorim, E. L. Rocha, L. Minardi, V. Alves, E. P. de Freitas, T. Castro, M. Amrani, J. Ortiz, P.-Y. Schobbens, and G. Perrouin, “Providing command and control agility: A software product line approach,” Expert Systems with Applications, vol. 216, p. 119473, 2023. [Online]. Available at: https://www.sciencedirect.com/science/article/pii/S0957417422024927\n  E. Medeiros, E. Peixoto and E. Lemos, \u0026ldquo;FACT: A Domain-Specific Language Based on a Functional Algebra for Continuous Time Modeling,\u0026rdquo; 2023 Winter Simulation Conference (WSC), San Antonio, TX, USA, 2023, pp.","tags":[],"title":"Publications"},{"date":"2023-01-15","image":"","imageAlt":"","link":"https://duing.dev/about/","summary":"About me I\u0026rsquo;m Eduardo Lemos, a software developer based in Brasília, Brazil. I\u0026rsquo;ve graduated in computer engineering in 2022 at University of Brasília.\nI\u0026rsquo;ve started programming by changing IDs of items and blocks in Minecraft mods back in the day. Later on, at the final stretch at university, I discovered that computer science is addicting.\nAfter such discovery, I\u0026rsquo;ve started to slowly increase the number of personal projects. At the current moment, I actively participate in the study group Dr.","tags":[],"title":"About"},{"date":"2024-06-19","image":"","imageAlt":"","link":"https://duing.dev/posts/defaultsarenotdogmas/","summary":"The ability to understand and study language-agnostic concepts is invaluable. Although most of the time when programming we are interacting with language-specific features, some ideas float beyond any palpable implementation.\nThus, it is important to not only distinguish those but also to identify which ones we should use to create defaults when approaching other technologies. This, however, isn\u0026rsquo;t to say we will be unconditionally married to them \u0026ndash; effectively transforming them into dogmas.","tags":["lesson"],"title":"Don't make all defaults Dogmas"},{"date":"2024-01-27","image":"","imageAlt":"","link":"https://duing.dev/posts/firsttimeleader/","summary":"In the past three weeks, I led a team of developers, some would even call it a \u0026ldquo;Tech Lead\u0026rdquo; role. It was temporary and circumstantial, but I learned quite a few things about it.\nContext The client had an urgent (sorta of) demand that would need to be delivered in about 3 weeks. Our team for development would be composed of myself and 3 other teammates (all from my employer\u0026rsquo;s company).","tags":["lesson"],"title":"Circumstantial Leadership"},{"date":"2023-10-16","image":"","imageAlt":"","link":"https://duing.dev/posts/pragmatism/","summary":"Every once in a while, I hear people talking about high-level languages as a way to not be practical and/or pragmatic. As an example, this week such a situation occurred \u0026mdash; I heard someone saying something along those lines about Haskell. They see the added abstractions as a way to add fanciness for the sake of fanciness into your project, without any logical practical reason for doing so.\nEver since I understood why programmers left assembly languages behind, I understood that this popular take is nothing more than just a misconception on why we seek new concepts.","tags":["lesson"],"title":"Let us all be Pragmatists"}],
    "test": "Publications   About   Don't make all defaults Dogmas   Circumstantial Leadership   Let us all be Pragmatists   Is it all about the Story?   Teaching is Fun   OOP-style Typeclasses   Don't be a Hero, join a League   Beyond Hackers   Why Masters?   Do we still care about Art?   My best idea of 2022   Fixing Recursion   Circular Programming or Corecursion   ",
    "page": "1",
    "next": 
        "https://duing.dev/page/2/index.json"
    
}

