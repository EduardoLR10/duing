
{
    
    
    
    
    
    
    
    
        
        
        
    
        
        
        
    
        
        
        
    
        
        
        
    
        
        
        
    
    "articles": [{"date":"2023-01-15","image":"","imageAlt":"","link":"https://duing.dev/about/","summary":"About me I\u0026rsquo;m Eduardo Lemos, a software developer based in Brasília, Brazil. I\u0026rsquo;ve graduated in computer engineering in 2022 at University of Brasília.\nI\u0026rsquo;ve started programming by changing IDs of itens and blocks in Minecraft mods back in the day. Later on, at the final stretch at university, I\u0026rsquo;ve discovered myself as an addicted person to computer science.\nAfter such discovery, I\u0026rsquo;ve started to slowly increase the number of personal projects.","tags":[],"title":"About"},{"date":"2023-01-15","image":"","imageAlt":"","link":"https://duing.dev/publications/","summary":" J. C. Amorim, E. L. Rocha, L. Minardi, V. Alves, E. P. de Freitas, T. Castro, M. Amrani, J. Ortiz, P.-Y. Schobbens, and G. Perrouin, “Providing command and control agility: A software product line approach,” Expert Systems with Applications, vol. 216, p. 119473, 2023. [Online]. Available: https://www.sciencedirect.com/science/article/pii/S0957417422024927  ","tags":[],"title":"Publications"},{"date":"2023-08-21","image":"","imageAlt":"","link":"https://duing.dev/posts/ooptypeclasses/","summary":"The main benefit of exploring different programming paradigms is to learn how to build bridges. You have your preferences and by playing with the competitors, you are able to see where your preferences fall apart and vice-versa. Eventually, the mastery of both sides will allow you to syntatically and semantically connect the same concepts across different worlds of programming.\nThe story goes as follows: suppose you have a function that is generic enough in order to be worth it to generalize it to other types of structures, given that some constraints on it will be guaranteed.","tags":["technical"],"title":"OOP-style Typeclasses"},{"date":"2023-07-17","image":"","imageAlt":"","link":"https://duing.dev/posts/runtime/","summary":"Recently, I experimented with SYB (Scrap Your Boilerplate) in the Haskell programming language for a master\u0026rsquo;s course. The plan was for me to make a toy example of one of the professor\u0026rsquo;s ideas using this library because of its power and generality.\nPrior to this project, I presented the subject for the class based on the original paper published by Simon and Ralf [1]. My impression after the reading, which is also the one that I attempted to portray to my peers, is that the usefulness of the method came at the cost of complexity of understanding and the use of unsafe operations.","tags":["lesson","technical"],"title":"Don't be a Hero, join a League"},{"date":"2023-07-09","image":"","imageAlt":"","link":"https://duing.dev/posts/beyondhackers/","summary":"The Cathedral and the Bazaar by Eric S. Raymond is a perfect union of philosophy, economics, and software development culture. The reverberations of his theory are fascinating and explain much more than just why you should care about open-source software.\nNeedless to say that I highly recommend the reading, there are aspects that he identified within the Hacker Culture that explain more than meets the naked eye. I\u0026rsquo;m here to suggest a few possible explanations for such observations and how the connection between those aspects and a hacker is more than just making money via coding.","tags":["lesson","recommendation"],"title":"Beyond Hackers"}],
    "test": "About   Publications   OOP-style Typeclasses   Don't be a Hero, join a League   Beyond Hackers   Why Masters?   Do we still care about Art?   My best idea of 2022   Fixing Recursion   Circular Programming or Corecursion   ",
    "page": "1",
    "next": 
        "https://duing.dev/page/2/index.json"
    
}

