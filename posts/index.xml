<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Duing Dev</title>
    <link>https://duing.dev/posts/</link>
    <description>Recent content in Posts on Duing Dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 01 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://duing.dev/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Teaching is Fun</title>
      <link>https://duing.dev/posts/teaching/</link>
      <pubDate>Fri, 01 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://duing.dev/posts/teaching/</guid>
      <description>During my vacation time from University, my mentor Edil proposed I teach undergraduate students in the following semester. He would be doing the third edition of his Functional Programming (FP) with Haskell course &amp;ndash; the one that introduced me to FP in 2021. The idea was that he would give me some guidelines and I would have the freedom to create my own material and teaching strategy for the first 2 classes of the course.</description>
    </item>
    
    <item>
      <title>OOP-style Typeclasses</title>
      <link>https://duing.dev/posts/ooptypeclasses/</link>
      <pubDate>Mon, 21 Aug 2023 00:00:00 +0000</pubDate>
      
      <guid>https://duing.dev/posts/ooptypeclasses/</guid>
      <description>The main benefit of exploring different programming paradigms is to learn how to build bridges. You have your preferences and by playing with the competitors, you are able to see where your preferences fall apart and vice-versa. Eventually, the mastery of both sides will allow you to syntatically and semantically connect the same concepts across different worlds of programming.
The story goes as follows: suppose you have a function that is generic enough in order to be worth it to generalize it to other types of structures, given that some constraints on it will be guaranteed.</description>
    </item>
    
    <item>
      <title>Don&#39;t be a Hero, join a League</title>
      <link>https://duing.dev/posts/runtime/</link>
      <pubDate>Mon, 17 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://duing.dev/posts/runtime/</guid>
      <description>Recently, I experimented with SYB (Scrap Your Boilerplate) in the Haskell programming language for a master&amp;rsquo;s course. The plan was for me to make a toy example of one of the professor&amp;rsquo;s ideas using this library because of its power and generality.
Prior to this project, I presented the subject for the class based on the original paper published by Simon and Ralf [1]. My impression after the reading, which is also the one that I attempted to portray to my peers, is that the usefulness of the method came at the cost of complexity of understanding and the use of unsafe operations.</description>
    </item>
    
    <item>
      <title>Beyond Hackers</title>
      <link>https://duing.dev/posts/beyondhackers/</link>
      <pubDate>Sun, 09 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://duing.dev/posts/beyondhackers/</guid>
      <description>The Cathedral and the Bazaar by Eric S. Raymond is a perfect union of philosophy, economics, and software development culture. The reverberations of his theory are fascinating and explain much more than just why you should care about open-source software.
Needless to say that I highly recommend the reading, there are aspects that he identified within the Hacker Culture that explain more than meets the naked eye. I&amp;rsquo;m here to suggest a few possible explanations for such observations and how the connection between those aspects and a hacker is more than just making money via coding.</description>
    </item>
    
    <item>
      <title>Why Masters?</title>
      <link>https://duing.dev/posts/masters/</link>
      <pubDate>Mon, 06 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://duing.dev/posts/masters/</guid>
      <description>Starting in March, I will start a master&amp;rsquo;s program at University of Bras√≠lia, the same university where I graduated almost a year ago. The thought process that I went in order to make such a decision is not conventional and I think it is worth sharing it.
Software Industry As we know, the software industry values academic achievements only in very specific situations, usually involving big companies with very complicated projects to push, such as the next Apple M3 processor and Windows 12 at Microsoft.</description>
    </item>
    
    <item>
      <title>Do we still care about Art?</title>
      <link>https://duing.dev/posts/careaboutart/</link>
      <pubDate>Wed, 18 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://duing.dev/posts/careaboutart/</guid>
      <description>In this post, I want to talk about how a movie that I watched years ago added some value in the current version of myself. How, now that I&amp;rsquo;m much older than back then, I see that the movie showed to me that art is much more important that I thought. How, even in my profession, there can be a noble purpose.
Retrospective Sometimes we remember our infancy. We remember the toys we used to play with, the people we used to interact with, the lessons that we learned along the way (usually in the most painful way), and also we remember what we used to watch.</description>
    </item>
    
    <item>
      <title>My best idea of 2022</title>
      <link>https://duing.dev/posts/bestidea2022/</link>
      <pubDate>Sun, 15 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://duing.dev/posts/bestidea2022/</guid>
      <description>During 2022, a lot of things happened. I graduated from university, got my first job, and moved to a new one, the second one being my first international experience within the programming industry. While working, I also continued the development of my graduation thesis with the help of my friend and mentor Edil Medeiros. All these experiences were great on their own, but they don&amp;rsquo;t even get close to how good the idea of a study group was.</description>
    </item>
    
    <item>
      <title>Fixing Recursion</title>
      <link>https://duing.dev/posts/fixingrecursion/</link>
      <pubDate>Sat, 11 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://duing.dev/posts/fixingrecursion/</guid>
      <description>Disclaimer I created this post during the make of my graduation project more than one and half years ago. This post served as training of a topic I had the intention of talking about in the final thesis &amp;ndash; something that ended up not happening. You know that when math comes into programming something special is going to happen!
Introduction Recursion is a common way to solve a wide range of problems.</description>
    </item>
    
    <item>
      <title>Circular Programming or Corecursion</title>
      <link>https://duing.dev/posts/circularprogramming/</link>
      <pubDate>Fri, 30 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://duing.dev/posts/circularprogramming/</guid>
      <description>Disclaimer I created this post during the make of my graduation project more than one and half years ago. This post served as training of a topic I had the intention of talking about in the final thesis &amp;ndash; something that ended up not happening. I&amp;rsquo;ve made a presentation on Dr.Nekoma about the topic, given how interesting it is. The following is the original post.
Introduction Here I present a very descriptive explanation of a solution to a simple example problem.</description>
    </item>
    
  </channel>
</rss>
